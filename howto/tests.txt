brick OKls
'3D Objects'            'Local Settings'                                                                                NetHood               Videos
 AndroidStudioProjects   MJKJRegInfo_U5E664P45VMUH7KFFLV36NSWUTVWJHRR                                                   Nox_share             d4ac4633ebd6440fa397b84f1bc94a3c.7z
 AppData                 Music                                                                                          OneDrive              inittk.ini
'Application Data'      'My Documents'                                                                                  Pictures              inst.ini
 Contacts                NTUSER.DAT                                                                                     PrintHood             ntuser.dat.LOG1
 Cookies                 NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.0.regtrans-ms                             Recent                ntuser.dat.LOG2
 Desktop                 NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.1.regtrans-ms                            'Saved Games'          ntuser.ini
 Documents               NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.2.regtrans-ms                             Searches              nuuid.ini
 Downloads               NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.blf                                       SendTo                tracker.prefs
 Dropbox                 NTUSER.DAT{1c2b59c6-c5f5-11eb-bacb-000d3a96488e}.TM.blf                                        ShaperUtilities.log   usb_driver
 Favorites               NTUSER.DAT{1c2b59c6-c5f5-11eb-bacb-000d3a96488e}.TMContainer00000000000000000001.regtrans-ms  'Start Menu'           useruid.ini
 Links                   NTUSER.DAT{1c2b59c6-c5f5-11eb-bacb-000d3a96488e}.TMContainer00000000000000000002.regtrans-ms   Templates             vmlogs
brick OKexport PS1='`if [[ $? -gt 0 ]]; then echo KO; else echo OK; fi` `whoami`'
OK brickls
'3D Objects'            'Local Settings'                                                                                NetHood               Videos
 AndroidStudioProjects   MJKJRegInfo_U5E664P45VMUH7KFFLV36NSWUTVWJHRR                                                   Nox_share             d4ac4633ebd6440fa397b84f1bc94a3c.7z
 AppData                 Music                                                                                          OneDrive              inittk.ini
'Application Data'      'My Documents'                                                                                  Pictures              inst.ini
 Contacts                NTUSER.DAT                                                                                     PrintHood             ntuser.dat.LOG1
 Cookies                 NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.0.regtrans-ms                             Recent                ntuser.dat.LOG2
 Desktop                 NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.1.regtrans-ms                            'Saved Games'          ntuser.ini
 Documents               NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.2.regtrans-ms                             Searches              nuuid.ini
 Downloads               NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.blf                                       SendTo                tracker.prefs
 Dropbox                 NTUSER.DAT{1c2b59c6-c5f5-11eb-bacb-000d3a96488e}.TM.blf                                        ShaperUtilities.log   usb_driver
 Favorites               NTUSER.DAT{1c2b59c6-c5f5-11eb-bacb-000d3a96488e}.TMContainer00000000000000000001.regtrans-ms  'Start Menu'           useruid.ini
 Links                   NTUSER.DAT{1c2b59c6-c5f5-11eb-bacb-000d3a96488e}.TMContainer00000000000000000002.regtrans-ms   Templates             vmlogs
OK brickasdf

Command 'asdf' not found, did you mean:

  command 'adsf' from deb ruby-adsf (1.4.3+dfsg1-1)
  command 'sdf' from deb sdf (2.001+1-7)
  command 'sadf' from deb sysstat (12.2.0-2)
  command 'asdfg' from deb aoeui (1.7+20160302.git4e5dee9-2)

Try: sudo apt install <deb name>

KO brickls
'3D Objects'            'Local Settings'                                                                                NetHood               Videos
 AndroidStudioProjects   MJKJRegInfo_U5E664P45VMUH7KFFLV36NSWUTVWJHRR                                                   Nox_share             d4ac4633ebd6440fa397b84f1bc94a3c.7z
 AppData                 Music                                                                                          OneDrive              inittk.ini
'Application Data'      'My Documents'                                                                                  Pictures              inst.ini
 Contacts                NTUSER.DAT                                                                                     PrintHood             ntuser.dat.LOG1
 Cookies                 NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.0.regtrans-ms                             Recent                ntuser.dat.LOG2
 Desktop                 NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.1.regtrans-ms                            'Saved Games'          ntuser.ini
 Documents               NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.2.regtrans-ms                             Searches              nuuid.ini
 Downloads               NTUSER.DAT{1c2b59c5-c5f5-11eb-bacb-000d3a96488e}.TxR.blf                                       SendTo                tracker.prefs
 Dropbox                 NTUSER.DAT{1c2b59c6-c5f5-11eb-bacb-000d3a96488e}.TM.blf                                        ShaperUtilities.log   usb_driver
 Favorites               NTUSER.DAT{1c2b59c6-c5f5-11eb-bacb-000d3a96488e}.TMContainer00000000000000000001.regtrans-ms  'Start Menu'           useruid.ini
 Links                   NTUSER.DAT{1c2b59c6-c5f5-11eb-bacb-000d3a96488e}.TMContainer00000000000000000002.regtrans-ms   Templates             vmlogs
OK brickexport PS1='`if [[ $? -gt 0 ]]; then echo KO; else echo OK; fi` `whoami` '
OK brick export PS1='`if [[ $? -gt 0 ]]; then echo KO; else echo OK; fi` `whoami` '
OK brick pwd
/mnt/c/Users/brick
OK brick cd Documents/Files/Projects/Programming/
OK brick cd Website
OK brick pwd
/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website
OK brick export PS1='`if [[ $? -gt 0 ]]; then echo KO; else echo OK; fi` `whoami` '
OK brick export PS1='`if [[ $? -gt 0 ]]; then echo KO; else echo OK; fi` `whoami` `__git_ps1`'
OK brick  (master)ls
ICON.png  LICENSE  README.md  next.config.js  website
OK brick  (master)export PS1='`if [[ $? -gt 0 ]]; then echo KO; else echo OK; fi` `whoami` `__git_ps1`'
OK brick  (master)export PS1='`if [[ $? -gt 0 ]]; then echo KO; else echo OK; fi` `whoami` `__git_ps1`'
OK brick  (master)git diff --cached --numstat | wc -l
0
OK brick  (master)ls
ICON.png  LICENSE  README.md  next.config.js  website
OK brick  (master)git diff --cached --numstat | wc -l
0
OK brick  (master)git diff --cached --stat
OK brick  (master)git diff --cached --stat
OK brick  (master)git diff --cached --stat
OK brick  (master)git diff --cached --stat
OK brick  (master)git status
Refresh index: 100% (891/891), done.
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   website/pages/[id].js

no changes added to commit (use "git add" and/or "git commit -a")
OK brick  (master)git diff --stat | tail -n1
 1 file changed, 1 insertion(+)
OK brick  (master)git diff --stat | tail -n1
 1 file changed, 1 insertion(+)
OK brick  (master)git diff --stat
 website/pages/[id].js | 1 +
 1 file changed, 1 insertion(+)
OK brick  (master)git diff --statnum
error: invalid option: --statnum
KO brick  (master)git diff --stat
 website/pages/[id].js | 1 +
 1 file changed, 1 insertion(+)
OK brick  (master)git diff --numstat
1       0       website/pages/[id].js
OK brick  (master)git diff --stat
 website/pages/[id].js | 1 +
 1 file changed, 1 insertion(+)
OK brick  (master)git diff --stat
 website/pages/404.js  | 8 --------
 website/pages/[id].js | 1 +
 2 files changed, 1 insertion(+), 8 deletions(-)
OK brick  (master)git diff --numstat
0       8       website/pages/404.js
1       0       website/pages/[id].js
OK brick  (master)git diff --numstat | wc -l
2
OK brick  (master)git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    website/pages/404.js
        modified:   website/pages/[id].js

no changes added to commit (use "git add" and/or "git commit -a")
OK brick  (master)git diff --numstat
0       8       website/pages/404.js
1       0       website/pages/[id].js
OK brick  (master)git diff --numstat -z
0       8       website/pages/404.js^@1 0       website/pages/[id].js^@
OK brick  (master)git diff --numstat -z
0       8       website/pages/404.js^@1 0       website/pages/[id].js^@
OK brick  (master)git diff --numstat
0       8       website/pages/404.js
1       0       website/pages/[id].js
OK brick  (master)git diff --stat
 website/pages/404.js  | 8 --------
 website/pages/[id].js | 1 +
 2 files changed, 1 insertion(+), 8 deletions(-)
OK brick  (master)git diff --cached --stat
OK brick  (master)git diff --cached --stat
OK brick  (master)git diff --cached --stat
OK brick  (master)git add  website/pages/[id].js
OK brick  (master)git diff --cached --stat
 website/pages/[id].js | 1 +
 1 file changed, 1 insertion(+)
OK brick  (master)git diff --cached --stat
 website/pages/[id].js | 1 +
 1 file changed, 1 insertion(+)
OK brick  (master)git diff --stat
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
OK brick  (master)ls
ICON.png  LICENSE  README.md  next.config.js  website
OK brick  (master)
OK brick  (master)
OK brick  (master)git diff --stat
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
OK brick  (master)git diff --cached --stat | wc -l
2
OK brick  (master)git diff --stat | wc =l
wc: '=l': No such file or directory
KO brick  (master)git diff --stat | wc -l
2
OK brick  (master)git diff --cached --stat | wc -l
2
OK brick  (master)git diff --cached --numstat | wc -l
1
OK brick  (master)git diff --numstat | wc -l
1
OK brick  (master)git diff --stat
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
OK brick  (master)git diff --stat | grep '-'
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
OK brick  (master)git diff --stat | grep '-'
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
OK brick  (master)git diff --stat | grep -E '-'
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
OK brick  (master)git diff --stat | grep pattern '-'
KO brick  (master)git diff --stat | grep '-'
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
OK brick  (master)git diff --stat | grep --no-index '-'
grep: unrecognized option '--no-index'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
KO brick  (master)git diff --stat | grep --no-index -e '-'
grep: unrecognized option '--no-index'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
KO brick  (master)git diff --stat | grep -o '-'
-
-
-
-
-
-
-
-
-
OK brick  (master)git diff --stat | grep -oh '-'
-
-
-
-
-
-
-
-
-
OK brick  (master)git diff --stat | grep -oh '-' | wc -l
9
OK brick  (master)git diff --stat | grep -oh '-' | wc -l
9
OK brick  (master)git diff --cached --stat | grep -oh '-' | wc -l
0
OK brick  (master)git diff --stat | grep -oh '-' | wc -l
9
OK brick  (master)git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   website/pages/[id].js

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    website/pages/404.js

OK brick  (master)git diff --stat
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
OK brick  (master)git diff --cached --stat
 website/pages/[id].js | 1 +
 1 file changed, 1 insertion(+)
OK brick  (master)git diff --stat | grep -oh '-|+' | wc -l
grep: invalid option -- '|'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
0
OK brick  (master)git diff --stat | grep -oh '-\|+' | wc -l
grep: invalid option -- '\'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
0
OK brick  (master)git diff --stat | grep -eoh '-\|+' | wc -l
grep: invalid option -- '\'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
0
OK brick  (master)git diff --stat | grep -oh '-\|+' | wc -l
grep: invalid option -- '\'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
0
OK brick  (master)git diff --stat | egrep -oh '-\|+' | wc -l
grep: invalid option -- '\'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
0
OK brick  (master)git diff --stat | egrep -oh '-|+' | wc -l
grep: invalid option -- '|'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
0
OK brick  (master)git diff --stat | egrep -oh '-|+' | wc -l
grep: invalid option -- '|'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
0
OK brick  (master)ls
ICON.png  LICENSE  README.md  next.config.js  website
OK brick  (master)git diff --stat | egrep -oh -e '-' -e '+' | wc -l
9
OK brick  (master)git diff --stat | egrep -oh -e '-' -e '+' | wc -l
9
OK brick  (master)git diff --cached --stat | egrep -oh -e '-' -e '+' | wc -l
0
OK brick  (master)git diff --cached --stat | egrep -oh -e '-' -oh -e '+' | wc -l
0
OK brick  (master)git diff --cached --stat
 website/pages/[id].js | 1 +
 1 file changed, 1 insertion(+)
OK brick  (master)git diff --cached --stat | egrep -oh -e '-' -e '+'
OK brick  (master)git diff --cached --stat | egrep -oh -e '-' -e '+'
OK brick  (master)git diff --stat | egrep -oh -e '-' -e '+'
-
-
-
-
-
-
-
-
-
OK brick  (master)git diff --cached --stat | egrep -oh -e '-' -e '+'
OK brick  (master)git diff --cached --stat | grep -oh -e '-' -e '+'
+
+
OK brick  (master)git diff --cached --stat | grep -oh -e '-' -e '+'
+
+
OK brick  (master)git diff --cached --stat | grep -oh -e '-' -e '+' | wc -l
2
OK brick  (master)git diff --stat | grep -oh -e '-' -e '+' | wc -l
9
OK brick  (master)git diff --stat | grep -oh -e '-' -e '+' | wc -l
9
OK brick  (master)git diff --stat | grep -oh -e '-' -e '+' | tr '\n' ''
tr: when not truncating set1, string2 must be non-empty
KO brick  (master)git diff --stat | grep -oh -e '-' -e '+' | tr '\n' ' '
- - - - - - - - - OK brick  (master)git diff --stat | grep -oh -e '-' -e '+' | tr '\n' ''
tr: when not truncating set1, string2 must be non-empty
KO brick  (master)git diff --stat | grep -oh -e '-' -e '+' | tr -d '\n'
---------OK brick  (master)git diff --stat | grep -oh -e '-' -e '+' | tr -d '\n'
---------OK brick git diff --cached --stat | grep -oh -e '-' -e '+' | tr -d '\n'
++OK brick  (master)git diff --stat | grep -oh -e '-' -e '+' | tr -d '\n'
---------OK brick  (master)git diff --stat | grep -oh -e '-' -e '+' | tr -d '\n' && git diff --cached --stat | grep -oh -e '-' -e '+' | tr -d '\n'
---------++OK brick  (master)git diff --stat | grep -oh -e '-' -e '+' | tr -d '\n' && git diff --cached --stat | grep -oh -e '-' -e '+' | tr -d '\n'
---------++OK bricgit diff --stat | grep -oh -e '-' -e '+' | tr -d '\n' && git diff --cached --stat | grep -oh -e '-' -e '+' | tr -d '\n'

Command 'gtat' not found, did you mean:

  command 'gtst' from deb scotch (6.0.9-1)
  command 'gstat' from deb ganglia-monitor (3.6.0-7ubuntu4)
  command 'stat' from deb coreutils (8.30-3ubuntu2)
  command 'gnat' from deb gnat-10 (10.3.0-1ubuntu1~20.04)
  command 'gnat' from deb gnat-9 (9.3.0-17ubuntu1~20.04)
  command 'gnat' from deb gnat-7 (7.5.0-6ubuntu2)
  command 'gnat' from deb gnat-8 (8.4.0-3ubuntu2)

Try: sudo apt install <deb name>

++OK brick  (maste
OK brick  (master)git diff --stat | grep -oh -e '-' -e '+' | tr -d '\n' && git diff --cached --stat | grep -oh -e '-' -e '+' | tr -d '\n'
---------++OK brick  (master)
OK brick  (master)git diff --stat | grep -oh -e '-' -e '+' | tr -d '\n' && git diff --cached --stat | grep -oh -e '-' -e '+' | tr -d '\n'
---------++OK brick  (master)
OK brick  (master)git diff --stat
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
OK brick  (master)^Ct diff --stat
KO brick  (master)git diff --cached --stat
 website/pages/[id].js | 1 +
 1 file changed, 1 insertion(+)
OK brick  (master)git diff --stat
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
OK brick  (master)git diff --stat && git diff --cached --stat
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
 website/pages/[id].js | 1 +
 1 file changed, 1 insertion(+)
OK brick  (master)git diff --stat | tail -n1 && git diff --cached --stat | tail -n1
 1 file changed, 8 deletions(-)
 1 file changed, 1 insertion(+)
OK brick  (master)git diff --stat | tail -n1 | tr -d '\n\ && git diff --cached --stat | tail -n1
>
>
> ^C
KO brick  (master)git diff --stat | tail -n1 | tr -d '\n' && git diff --cached --stat | tail -n1
 1 file changed, 8 deletions(-) 1 file changed, 1 insertion(+)
OK brick  (master)export PS1='`git diff --stat | tail -n1 | tr -d '\n' && git diff --cached --stat | tail -n1`'
 1 file chaged, 8 deletios(-)
 1 file changed, 1 insertion(+)ls
ICON.png  LICENSE  README.md  next.config.js  website
 1 file chaged, 8 deletios(-)
 1 file changed, 1 insertion(+)export PS1='`whoami``git diff --stat | tail -n1 | tr -d '\n' && git diff --cached --stat | tail -n1`'
brick 1 file chaged, 8 deletios(-)
 1 file changed, 1 insertion(+)export PS1='`whoami`\n`git diff --stat | tail -n1 | tr -d '\n' && git diff --cached --stat | tail -n1`'
brick
 1 file chaged, 8 deletios(-)
 1 file changed, 1 insertion(+)export PS1='`whoami`\n`git diff --stat | tail -n1 | tr -d \'\\n\' && git diff --cached --stat | tail -n1`'
>
> ^C
brick
 1 file chaged, 8 deletios(-)
 1 file changed, 1 insertion(+)export PS1='`whoami`\n`git diff --stat | tail -n1 | tr -d \'\n\' && git diff --cached --stat | tail -n1`'
> ^C
brick
 1 file chaged, 8 deletios(-)
 1 file changed, 1 insertion(+)^C
brick
 1 file chaged, 8 deletios(-)
 1 file changed, 1 insertion(+)export PS1='`whoami`\n`git diff --stat | tail -n1 | tr -d "\n" && git diff --cached --stat | tail -n1`'
brick
 1 file changed, 8 deletions(-) 1 file changed, 1 insertion(+)export PS1='`whoami`\n`git diff --stat | tail -n1 | tr -d " \n" && git diff --cached --stat | tail -n1`'
brick
1filechanged,8deletions(-) 1 file changed, 1 insertion(+)export PS1='`whoami`\n`git diff --stat | tail -n1 | tr -d "\n" && git diff --cached --stat | tail -n1`'
brick
 1 file changed, 8 deletions(-) 1 file changed, 1 insertion(+)export PS1='`whoami`\n`git diff --stat | tail -n1 | tr -d "\n" && git diff --cached --stat | tail -n1`\n'
brick
 1 file changed, 8 deletions(-) 1 file changed, 1 insertion(+)
export PS1='`whoami`\n`git diff --stat | tail -n1 | tr -d "\n" && git diff --cached --stat | tail -n1`\n'
brick
 1 file changed, 8 deletions(-) 1 file changed, 1 insertion(+)
export PS1=""
export PS1="`whoami`"
brickexport PS1="`whoami` "
brick git diff --stat
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
brick git diff --stat | grep -oh '-*'
grep: invalid option -- '*'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
brick git diff --stat | grep -oh '-'
-
-
-
-
-
-
-
-
-
brick git diff --stat | grep -oh '-'
-
-
-
-
-
-
-
-
-
brick git diff --stat | grep -oh '-{1,}'
grep: invalid option -- '{'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
brick git diff --stat | grep -oh -E '-{1,}'
grep: invalid option -- '{'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
brick git diff --stat | grep -oh '-{1,}'
grep: invalid option -- '{'
Usage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
brick git diff --stat | grep -oh '(-){1,}'
brick git diff --stat | grep -oh '(-){1,}'
brick git diff --stat | grep -oh '(-){1,}'
brick git diff --stat | grep -oh '(-){0,}'
brick git diff --stat | grep -oh -E '(-){0,}'
--------
-
brick git diff --stat | grep -oh -E '(-){0,}'
--------
-
brick git diff --stat | grep -oh -E '(-){0,}'
--------
-
brick git diff --stat | grep -oh -E '(-){0,}' | tr '\n' ' '
-------- - brick git diff --stat | grep -oh -E '(-){0,}' | tr '\n' ' '
-------- - brick
brick git diff --stat | grep -oh -E '(-){0,}' | tr '\n' ' '
-------- - brick
brick git diff --stat | grep -oh -E '(-){0,}' | tr '\n' ' '
-------- - brick
brick export PS1="`git diff --stat | grep -oh -E '(-){0,}' | tr '\n' ' '`"
-------- - ls
ICON.png  LICENSE  README.md  next.config.js  website
-------- -
-------- -
-------- -
-------- -
-------- -
-------- -
-------- - export PS1="`git diff --stat | grep -oh -E '(-){0,}' | tr '\n' ' '`"
-------- - export PS1="`git diff --stat | grep -oh -E '(-){0,}' -E '(+){0,}' | tr '\n' ' '`"
grep: (+){0,}: No such file or directory
export PS1="`git diff --stat | grep -oh -E '(-){0,}' -E '(+){0,}' | tr '\n' ' '`"
grep: (+){0,}: No such file or directory
export PS1="`git diff --stat | grep -oh -E '(-){0,}' -oh -E '(+){0,}' | tr '\n' ' '`"
grep: (+){0,}: No such file or directory
export PS1="`git diff --stat | grep -oh -E '(-){0,}' '(+){0,}' | tr '\n' ' '`"
grep: (+){0,}: No such file or directory
export PS1="`git diff --stat | grep -oh -e '(-){0,}' '(+){0,}' | tr '\n' ' '`"
grep: (+){0,}: No such file or directory
export PS1="`git diff --stat | grep -oh -e '(-){0,}' | tr '\n' ' '`"
export PS1="`git diff --stat | grep -oh -e '(-){0,}' | tr '\n' ' '`"
export PS1="`git diff --stat | grep -oh -e '(-){0,}' | tr '\n' ' '`"
git diff --stat | grep -oh -e '(-){0,}' | tr '\n' ' '
ls
ICON.png  LICENSE  README.md  next.config.js  website
git diff --stat | grep -oh -E '(-){0,}' | tr '\n' ' '
-------- - git diff --stat | grep -oh -E '(-){0,}' | tr '\n' ' '
-------- - export PS1=""
export PS1="`whoami` "
brick git diff --stat | grep -oh -E '(-){0,}' -E '(+){0,}' | tr '\n' ' '
grep: (+){0,}: No such file or directory
brick git diff --stat | grep -oh -E '[+-]{0,}' | tr '\n' ' '
-------- - brick git diff --stat | grep -oh -E '[+-]{0,}' | tr '\n' ' '
-------- - brick
brick
brick git diff --cached --stat | grep -oh -E '[+-]{0,}' | tr '\n' ' '
+ + brick
brick
brick git diff --stat | grep -oh -E '[+-]{0,}' | tr '\n' ' '
-------- - brick
brick
brick git diff --stat | grep -oh -E '[+-]{0,}' | tr '\n' ' '
-------- - brick
brick git diff --stat
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
brick git diff --stat | tail -n -1
 1 file changed, 8 deletions(-)
brick git diff --stat | tail -n 1
 1 file changed, 8 deletions(-)
brick git diff --stat | tail -n -1
 1 file changed, 8 deletions(-)
brick git diff --stat | sed '$d'
 website/pages/404.js | 8 --------
brick git diff --stat | sed '$d' | grep -oh -E '[+-]{0,}' | tr '\n' ' '
-------- brick ls
ICON.png  LICENSE  README.md  next.config.js  website
brick
brick
brick git diff --stat | sed '$d' | grep -oh -E '[+-]{0,}' | tr '\n' ' '
-------- brick
brick git diff --stat | sed '$d' | grep -oh -E '[+-]{0,}' | tr '\n' ' '
-------- brick
brick git diff --stat | sed '$d' | grep -oh -E '[+-]{0,}' | tr '\n' ' '
-------- brick
brick export PS1="__git_sp1"
__git_sp1export PS1="__git_ps1"
__git_ps1export PS1="`__git_ps1`"
 (master)export PS1="`__git_ps1`"
 (master)cd ..
 (master)export PS1="`__git_ps1`"
ls
'0.005$ problem'                           'Javascript interview with a Google engineer'   Steganography                                   'copy files.txt'                    'music generator'
'2d project timeline'                      'Markdown Inline Formatter'                    'Stock Market'                                   'copy proof'                        'new emilien.ml website'
'6th Sense'                                'Markup Language'                              'Stock Trading Strategy'                         'css grid test'                     'new language test'
'AI Image Compression'                     'Messenger Always Active'                      'Technical interview with a Microsoft engineer'  'custom launchpad'                  'noise canceler (not working)'
'Among Us Color Modifier'                  'Messenger Phishing'                           'Virus Maker Website'                            'deep writing'                      'old html stuff'
'Auto Clan Castle COC'                     'Minecraft Chat Large Font'                    'Virus Maker random versions'                    'eb ai'                             'pi finder'
 AutoCloudBackup                           'Modular Drawers Generator'                     WebInfo                                         'emma comment flood (not working)'  'poème deep freeze stealer'
 AutoSDCard                                'Monty Hall Problem'                           'WebInfo V4'                                     'emma website redesign'             'prime finder'
'Bee Movie Spam'                            MultiToastJS                                   Website                                         'emoji transfer'                    'programming challenge'
'Betaflight Blackbox Viewer'               'Music Offset Generator'                       'Website DOS'                                    'epilepsy lol'                       python-https-server.py
'CSBE Account Finder'                      'Neumorphic Design'                             Website-Old                                     'fibonacci finder'                  'random games like limbo'
'Caps Hotkeys V2'                          'Node Emilien.ml'                              'Word Generation'                                'fundemental particle simulation'   'réglages server'
'Card Bar Code'                            'NodeJS Simple Server'                         'Workflow Command'                               'haaacked website'                  'simple keyloggerV2'
'Cellular Automata'                        'Physics Range Analysis'                       'Youtube View Generator'                          hanoi.html                         'storage unit website'
'Emilien.ml V3'                            'PyBot Beta 1.0'                               'agar.io bot'                                    'hose finite element analysis'      'strike compiler (not working)'
'Encod-R 2.0'                              'Python Spam Bot'                              'artificial intelligence'                        'ip logger'                         'test multiplayer game'
'FizzBuzz, Ohe Simple Interview Question'   RCD                                           'assembly tests'                                 'javascript audiocontext test'       toUpper.py
'Font Generator'                           'RPi Server'                                    autorun.txt                                     'javascript scope test'             'vbs viruses'
'Google Calendar Automation'               'Random C++ Programs'                          'binary splitter'                                'kahoothack (not working)'          'vpn server test (not working)'
'HTML Virus'                               'Russian Roulette'                              blockUserInput.ps1                              'learning rust'                     'web worker test'
'Hello World Game'                          Scylla                                         comment                                         'mix parser'
'JScript Wifi Remover'                     'Spread-R JS'                                  'compiler tests'                                 'mix website idea'
cd Website
export PS1="`__git_ps1`"
 (master)export PS1="`whoami` `__git_ps1`"
brick  (master)ls
ICON.png  LICENSE  README.md  next.config.js  website
brick  (master)cd ..
brick  (master)ls
'0.005$ problem'                           'Javascript interview with a Google engineer'   Steganography                                   'copy files.txt'                    'music generator'
'2d project timeline'                      'Markdown Inline Formatter'                    'Stock Market'                                   'copy proof'                        'new emilien.ml website'
'6th Sense'                                'Markup Language'                              'Stock Trading Strategy'                         'css grid test'                     'new language test'
'AI Image Compression'                     'Messenger Always Active'                      'Technical interview with a Microsoft engineer'  'custom launchpad'                  'noise canceler (not working)'
'Among Us Color Modifier'                  'Messenger Phishing'                           'Virus Maker Website'                            'deep writing'                      'old html stuff'
'Auto Clan Castle COC'                     'Minecraft Chat Large Font'                    'Virus Maker random versions'                    'eb ai'                             'pi finder'
 AutoCloudBackup                           'Modular Drawers Generator'                     WebInfo                                         'emma comment flood (not working)'  'poème deep freeze stealer'
 AutoSDCard                                'Monty Hall Problem'                           'WebInfo V4'                                     'emma website redesign'             'prime finder'
'Bee Movie Spam'                            MultiToastJS                                   Website                                         'emoji transfer'                    'programming challenge'
'Betaflight Blackbox Viewer'               'Music Offset Generator'                       'Website DOS'                                    'epilepsy lol'                       python-https-server.py
'CSBE Account Finder'                      'Neumorphic Design'                             Website-Old                                     'fibonacci finder'                  'random games like limbo'
'Caps Hotkeys V2'                          'Node Emilien.ml'                              'Word Generation'                                'fundemental particle simulation'   'réglages server'
'Card Bar Code'                            'NodeJS Simple Server'                         'Workflow Command'                               'haaacked website'                  'simple keyloggerV2'
'Cellular Automata'                        'Physics Range Analysis'                       'Youtube View Generator'                          hanoi.html                         'storage unit website'
'Emilien.ml V3'                            'PyBot Beta 1.0'                               'agar.io bot'                                    'hose finite element analysis'      'strike compiler (not working)'
'Encod-R 2.0'                              'Python Spam Bot'                              'artificial intelligence'                        'ip logger'                         'test multiplayer game'
'FizzBuzz, Ohe Simple Interview Question'   RCD                                           'assembly tests'                                 'javascript audiocontext test'       toUpper.py
'Font Generator'                           'RPi Server'                                    autorun.txt                                     'javascript scope test'             'vbs viruses'
'Google Calendar Automation'               'Random C++ Programs'                          'binary splitter'                                'kahoothack (not working)'          'vpn server test (not working)'
'HTML Virus'                               'Russian Roulette'                              blockUserInput.ps1                              'learning rust'                     'web worker test'
'Hello World Game'                          Scylla                                         comment                                         'mix parser'
'JScript Wifi Remover'                     'Spread-R JS'                                  'compiler tests'                                 'mix website idea'
brick  (master)cd Website
brick  (master)export PS1=;`whoami` `__git_ps1`'
> ^C
brick  (master)export PS1='`whoami` `__git_ps1`'
brick  (master)cd ..
brick cd Websie
-bash: cd: Websie: No such file or directory
brick cd Website
brick  (master)export PS1='`whoami``__git_ps1`'
brick (master)ls
ICON.png  LICENSE  README.md  next.config.js  website
brick (master)export PS1='`whoami``__git_ps1` '
brick (master) pwd
/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website
brick (master) $HOME
-bash: /home/brick: Is a directory
brick (master) echo $HOME
/home/brick
brick (master) dirs +0
/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website
brick (master) dirs
/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website
brick (master) dirs -c
brick (master) export PS1='`whoami``__git_ps1` %~'
brick (master) %~asdf

Command 'asdf' not found, did you mean:

  command 'asdfg' from deb aoeui (1.7+20160302.git4e5dee9-2)
  command 'adsf' from deb ruby-adsf (1.4.3+dfsg1-1)
  command 'sadf' from deb sysstat (12.2.0-2)
  command 'sdf' from deb sdf (2.001+1-7)

Try: sudo apt install <deb name>

brick (master) %~export PS1='`whoami``__git_ps1` \%~'
brick (master) \%~export PS1='`whoami``__git_ps1`'
brick (master)export PS1='`whoami``__git_ps1`'
brick (master)export PS1='`whoami``__git_ps1`\w'
brick (master)/mnt/c/Users/brick/Documents/Files/Projects/Programming/Websiteexport PS1='`whoami``__git_ps1`\w '
brick (master)/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website echo '\w'
\w
brick (master)/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website echo \w
w
brick (master)/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website export PS1='`whoami``__git_ps1`\w '
brick (master)/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website export PS1='`whoami``__git_ps1`\w '
brick (master)/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website export PS1='`whoami` \w`__git_ps1`'
brick /mnt/c/Users/brick/Documents/Files/Projects/Programming/Website (master)export PS1='`whoami` \W`__git_ps1`'
brick Website (master)export PS1='`whoami` \W`__git_ps1`'
brick Website (master)export PS1=''u` \W`__git_ps1`'
> ^C
brick Website (master)export PS1='\u` \W`__git_ps1`'
Website: command not found
brick__git_ps1`export PS1='\u` \W`__git_ps1`'^C
Website: command not found
brick__git_ps1`^C
Website: command not found
brick__git_ps1`export PS1='\u \W`__git_ps1`'
brick Website (master)echo $PWD | rev | cut -d '/' -f 1 | rev
Website
brick Website (master)echo $PWD | rev | cut -d '/' -f 2 | rev
Programming
brick Website (master)export PS1='\u \W`__git_ps1``pwd | rev | cut -d '/' -f 2 | rev`'
brick Website (master)Programmingexport PS1='\u `__git_ps1``pwd | rev | cut -d '/' -f 2 | rev`\W'
brick  (master)ProgrammingWebsiteexport PS1='\u `__git_ps1``pwd | rev | cut -d '/' -f 2 | rev`/\W'
brick  (master)Programming/Websiteexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1`'
brick Programming/Website (master)export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1`'
brick Programming/Website (master)export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1`'
brick Programming/Website (master)export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1`'
brick Programming/Website (master)export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1`'
brick Programming/Website (master)cd website/
brick Website/website (master)cd ..
brick Programming/Website (master)export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1`'
brick Programming/Website (master)uptime
 19:50:31 up  1:06,  0 users,  load average: 0.52, 0.58, 0.59
brick Programming/Website (master)git diff --stat
 website/pages/404.js | 8 --------
 1 file changed, 8 deletions(-)
brick Programming/Website (master)git diff --numstat
0       8       website/pages/404.js
brick Programming/Website (master)git diff --numstat | wc -l
1
brick Programming/Website (master){git diff --numstat & git diff --cached --numstat} | wc -l
[1] 2329
usage: git diff [<options>] [<commit> [<commit>]] [--] [<path>...]
0
brick Programming/Website (master)
Command '{git' not found, did you mean:

  command 'jgit' from deb jgit-cli (3.7.1-6)
  command 'qgit' from deb qgit (2.9-1build1)
  command 'git' from deb git (1:2.25.1-1ubuntu3.1)
  command 'dgit' from deb dgit (9.10)

Try: sudo apt install <deb name>

^C
[1]+  Exit 127                {git diff --numstat
brick Programming/Website (master)^C
brick Programming/Website (master)echo {git diff --numstat & git diff --cached --numstat} | wc -l
[1] 2363
{git diff --numstat
usage: git diff [<options>] [<commit> [<commit>]] [--] [<path>...]
0
[1]+  Done                    echo {git diff --numstat
brick Programming/Website (master){git diff --numstat & git diff --cached --numstat} | wc -l
[1] 2374
usage: git diff [<options>] [<commit> [<commit>]] [--] [<path>...]
0
brick Programming/Website (master)
Command '{git' not found, did you mean:

  command 'git' from deb git (1:2.25.1-1ubuntu3.1)
  command 'qgit' from deb qgit (2.9-1build1)
  command 'jgit' from deb jgit-cli (3.7.1-6)
  command 'dgit' from deb dgit (9.10)

Try: sudo apt install <deb name>

^C
[1]+  Exit 127                {git diff --numstat
brick Programming/Website (master)^C
brick Programming/Website (master)^C
brick Programming/Website (master){git diff --numstat & git diff --cached --numstat} | wc -l^C
brick Programming/Website (master)export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1`{git diff --numstat & git diff --cached --numstat} | wc -l'
brick Programming/Website (master){git diff --numstat & git diff --cached --numstat} | wc -lexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `{git diff --numstat & git diff --cached --numstat}
| wc -l`'
usage: git diff [<options>] [<commit> [<commit>]] [--] [<path>...]

Command '{git' not found, did you mean:

  command 'dgit' from deb dgit (9.10)
  command 'qgit' from deb qgit (2.9-1build1)
  command 'git' from deb git (1:2.25.1-1ubuntu3.1)
  command 'jgit' from deb jgit-cli (3.7.1-6)

Try: sudo apt install <deb name>

brick Programming/Website (master) 0export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `{ git diff --numstat & git diff --cached --numstat } | wc -l`'
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `\{ git diff --numstat & git diff --cached --numstat } \| wc -l`'
fatal: ambiguous argument '}': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
{: command not found
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `{ git diff --numstat && git diff --cached --numstat } | wc -l`'
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) { git diff --numstat && git diff --cached --numstat } | wc -l
> ^C
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) ^C
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) { git diff --numstat && git diff --cached --numstat } | wc -l
> ^C
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) ^C
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) { git diff --numstat && git diff --cached --numstat; } | wc -l
2
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `{ git diff --numstat && git diff --cached --numstat; } | wc -l`'
brick Programming/Website (master) 2export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `{ git diff --numstat && git diff --cached --numstat; } | wc -l`'
brick Programming/Website (master) 2export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `{ git diff --numstat && git diff --cached --numstat; } | wc -l`'
brick Programming/Website (master) 2export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `{ git diff --numstat && git diff --cached --numstat; } | wc -l -gt 0`'
wc: invalid option -- 'g'
Try 'wc --help' for more information.
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [ { git diff --numstat && git diff --cached --numstat; } | wc -l -gt 0 ]; echo "asdf"; else "fasd";`'
-bash: command substitution: line 1: syntax error near unexpected token `}'
-bash: command substitution: line 1: `if [ { git diff --numstat && git diff --cached --numstat; } | wc -l -gt 0 ]; echo "asdf"; else "fasd";'
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ { git diff --numstat && git diff --cached --numstat; } | wc -l -gt 0 ]]; echo "asdf"; else "fasd";`'
-bash: command substitution: line 1: conditional binary operator expected
-bash: command substitution: line 1: syntax error near `git'
-bash: command substitution: line 1: `if [[ { git diff --numstat && git diff --cached --numstat; } | wc -l -gt 0 ]]; echo "asdf"; else "fasd";'
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ \`{ git diff --numstat && git diff --cached --numstat; } | wc -l\` -gt 0 ]]; echo "asdf"; else "fasd";`'
-bash: command substitution: line 1: syntax error near unexpected token `else'
-bash: command substitution: line 1: `if [[ `{ git diff --numstat && git diff --cached --numstat; } | wc -l` -gt 0 ]]; echo "asdf"; else "fasd";'
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ { git diff --numstat && git diff --cached --numstat; } | wc -l -gt 0 ]]; echo "asdf"; else "fasd";`'
-bash: command substitution: line 1: conditional binary operator expected
-bash: command substitution: line 1: syntax error near `git'
-bash: command substitution: line 1: `if [[ { git diff --numstat && git diff --cached --numstat; } | wc -l -gt 0 ]]; echo "asdf"; else "fasd";'
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; echo "asdf"; else "fasd";`'
-bash: command substitution: line 1: syntax error near unexpected token `else'
-bash: command substitution: line 1: `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; echo "asdf"; else "fasd";'
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; echo "asdf"; else "fasd";`'
-bash: command substitution: line 1: syntax error near unexpected token `else'
-bash: command substitution: line 1: `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; echo "asdf"; else "fasd";'
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "asdf"; else "fasd";`'
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ \$({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "asdf"; else "fasd";`'
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "asdf"; else "fasd";`'
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "asdf"; else echo "fasd";`'
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "asdf"; else echo "fasd";`'
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "asdf"; else echo "fasd";
> ^C
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "asdf"; else echo "fasd"; fi;
asdf
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "asdf"; else echo "fasd"; fi`'
brick Programming/Website (master) asdfexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "asdf"; else echo "fasd"; fi`'
brick Programming/Website (master) asdfexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -eq 0 ]]; then echo "asdf"; else echo "fasd"; fi`'
brick Programming/Website (master) fasdexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`__git_ps1` `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "asdf"; else echo "fasd"; fi`'
brick Programming/Website (master) asdfexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\e\[33m\]"; else echo
"fasd"; fi`'
brick Programming/Website 3mexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\0[33[33m\]"; else echo "fasd"; fi`'
brick Programming/Website 33[33mexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m\]"; else echo "fas
brick Programming/Website 
brick Programming/Website 
brick Programming/Website 
brick Programming/Website export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033\^C033[33m\]"; else echo "fasd"; fi`'
brick Programming/Website ^C
brick Programming/Website ^C
brick Programming/Website ^C
brick Programming/Website export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033"\033\[33m\]"; else echo "fasd"; fi`'
brick Programming/Website 3mls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website 3mexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033\[33a"^Celse echo "fasd"; fi`'
brick Programming/Website 3m^C
brick Programming/Website 3m^C
brick Programming/Website 3m^C
brick Programming/Website 3mls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website 3mexport PS1="\n"

export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "asdf"; else echo "fasd"; fi`'
brick Programming/Website asdfexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\u001b[33m"; else echo "fasd";
fi`'
brick Programming/Website brick001b[33mexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\\u001b[33m"; else echo "fasd"; fi`'
brick Programming/Website \u001b[33mexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m"; else echo "fasd"; fi`'
brick Programming/Website ls
ICON.png  LICENSE  README.md  next.config.js  website
bri^C Programming/Website export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m"; else echo "fasd"; fi`'
brick Programming/Website ^C
brick Programming/Website ^C                                                                                                                                                                                   asdf"; else echo "fasd"; fi`'; fiexport PS1="\n"

export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m]"; else echo "fasd"; fi`'        ^C
brick Programming/Website ]export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m]"; else echo "fasd"; fi`'brick Programming/Website ]^C
brick Programming/Website ]^C                                                                                                                                                                                   "\n"

ls
ICON.png  LICENSE  README.md  next.config.js  website

export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m"; else echo "fasd"; fi``__git_ps1`'
brick Programming/Website  (master)export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m"; else echo "fasd"; fi``__git_ps1` `echo \033[0m'
-bash: bad substitution: no closing "`" in `echo
brick `pwd | rev | cut -d / -f 2 | rev`/Website `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo ""; else echo "fasd"; fi``__git_ps1` `echo
-bash: bad substitution: no closing "`" in `echo
brick `pwd | rev | cut -d / -f 2 | rev`/Website `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo ""; else echo "fasd"; fi``__git_ps1` `echo
-bash: bad substitution: no closing "`" in `echo
brick `pwd | rev | cut -d / -f 2 | rev`/Website `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo ""; else echo "fasd"; fi``__git_ps1` `echo
-bash: bad substitution: no closing "`" in `echo
brick `pwd | rev | cut -d / -f 2 | rev`/Website `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo ""; else echo "fasd"; fi``__git_ps1` `echo
-bash: bad substitution: no closing "`" in `echo
brick `pwd | rev | cut -d / -f 2 | rev`/Website `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo ""; else echo "fasd"; fi``__git_ps1` `echo          export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m"; else echo "fasd"; fi``__git_ps1` `echo "\033[0m"`'
brick Programming/Website  (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website  (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W `if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m"; else echo "fasd"; fi``__git_ps1` `echo "\033[0m"`'
brick Programming/Website  (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website  (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m"; else echo "fas
brick Programming/Website (master) '
brick Programming/Website (master)
brick Programming/Website (master)
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master)
brick Programming/Website (master)
brick Programming/Website (master)
brick Programming/Website (master)
brick Programming/Website (master)
brick Programming/Website (master)
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m"; else echo "fasd"; fi``__git_ps1` `echo "\033[0m"`'
brick Programming/Website (master)
brick Programming/Website (master) export PS1^Cort PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m"; else echofi``__git_ps1` `echo "\033[0m"`'
brick Programming/Website (master) ^C
brick Programming/Website (master) ^C                                                                                                                                                                          ^Cbrick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m]"; else echo "fasdbrick Programming/Website (master) ^C
brick Programming/Website (master) ^C
^C
brick Programming/Website (master) export PS1="\n"

export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033\[33m\]"; else echo "fasd"; fi``__git_ps1` `echo "\033\[0m\]"`'
brick Programming/Website3m (master) mls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website3m (master) mexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m]"; else echo "fasd"; fi``__git_ps1` `echo "\0330m]"`''
brick Programming/Website] (master) 0m]ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website] (master) 0m]^C
brick Programming/Website] (master) 0m]^C
brick Programming/Website] (master) 0m]export ^C1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m]"; else echo "fasd"; fi``__git_ps1` `echo "\033\0m]"`'
brick Programming/Website] (master) 0m]^C
brick Programming/Website] (master) 0m]ls     export PS1="\n"

export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m\]"; else echo "fasd"; fi``__git_ps1` `echo "\033[0m\]"`'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m\]"; else echo "fasd"; fi``__git_ps1` `echo "\033[0m\]"`'
-bash: bad substitution: no closing "`" in `echo "
brick `pwd | rev | cut -d / -f 2 | rev`/Website`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo ""; else echo "fasd"; fi``__git_ps1` `echo "ls
ICON.png  LICENSE  README.md  next.config.js  website
-bash: bad substitution: no closing "`" in `echo "
brick `pwd | rev | cut -d / -f 2 | rev`/Website`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo ""; else echo "fasd"; fi``__git_ps1` `echo "export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo "\033[33m\]"; else echo "fasd"; fi``__git_ps1` `echo "\0'
-bash: bad substitution: no closing "`" in `echo "
brick `pwd | rev | cut -d / -f 2 | rev`/Website`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo ""; else echo "fasd"; fi``__git_ps1` `echo "export PS1="\n"

export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\033[33m\]"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\033[00m\]"`'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\033[33m^C33[33m\]"; el "fasd"; fi``__git_ps1` `echo -e "\033[00m\]"`'
brick Programming/Website (master) ^C
brick Programming/Website (master) ^C
brick Programming/Website (master) ls        export PS1="\n"

export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\033[33m"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\033[00m"`'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\033[33m"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\033[00m"`'
brick Programming/Website (master)           ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ gi^Cdiff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\033[33m"; else echo -e
"fasd"; fi``__git_ps1` `echo -e "\033[00m"`'
^C
brick Programming/Website (master) export PS1="\n"

export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\033\[33m\]"; else echo -e "fasd"; fi``__git_ps1` `echo -e
"\033\[00m\]"`'
brick Programming/Website3m (master) 0mls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website3m (master) 0mexport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\033[33m]"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\033\m^C"`'`'
brick Programming/Website3m (master) 0m^C
brick Programming/Website3m (master) 0m^C
brick Programming/Website3m (master) 0mexport PS1="\n"

export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\033\[33m"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\033[00m"`'
brick Programming/Website3m (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website3m (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website3m (master) git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   website/pages/[id].js

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    website/pages/404.js

brick Programming/Website3m (master) =sdf^Cport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\033\[33m"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\033[00m"`'
brick Programming/Website3m (master) export PS1="\n"

export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\033[33m"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\033[00m"`'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website                                                                                                                                                           ^Cxport PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\033[33m"; eellsgt 0 ]]; then echo -e "\033[33m"; else echo"fasd"; fi``__git_ps1` `echo -e "\033[00m"`'
brick Programming/Website (master) ^C
brick Programming/Website (master) ^C
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1="\n"

export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\033[33m]"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\033[00m]"`'
brick Programming/Website] (master) ]ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website] (master) ]ls
ICON.png  LICENSE  README.md  next.config.js  website                                                                                                                                                           jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjexpjjjjjjjjjjjjjj^Ct PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0
]]; then echo -e "\033[33m]"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\033[00m]"`'_git_ps1` `echo -e "\033[00m]"`'
brick Programming/Website] (master) ]^C
brick Programming/Website] (master) ]^C
brick Programming/Website] (master) ]export PS1=""
export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "fasd"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) export PS1='\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[92m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) git revert
usage: git revert [<options>] <commit-ish>...
   or: git revert <subcommand>

    --quit                end revert or cherry-pick sequence
    --continue            resume revert or cherry-pick sequence
    --abort               cancel revert or cherry-pick sequence
    --skip                skip current commit and continue
    --cleanup <mode>      how to strip spaces and #comments from message
    -n, --no-commit       don't automatically commit
    -e, --edit            edit the commit message
    -s, --signoff         add Signed-off-by:
    -m, --mainline <parent-number>
                          select mainline parent
    --rerere-autoupdate   update the index with reused conflict resolution if possible
    --strategy <strategy>
                          merge strategy
    -X, --strategy-option <option>
                          option for merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

brick Programming/Website (master) git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   website/pages/[id].js

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    website/pages/404.js

brick Programming/Website (master) git reset --hard head
HEAD is now at 8f4b5cc fixed cards unloading when clicking browser's 'back' button
brick Programming/Website (master) git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean
brick Programming/Website (master) export PS1='`if [[ $? -gt 0 ]]; then echo "KO"; else echo "OK"; fi`\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } |
wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[92m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
OKbrick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
OKbrick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
OKbrick Programming/Website (master) asdfasdfa
asdfasdfa: command not found
KObrick Programming/Website (master) export PS1='`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[00m\]"; fi`\u `pwd | rev | cut -d '/' -f 2 | rev`/\W`if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[92m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) asdfasdfasdf
asdfasdfasdf: command not found
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) asdfasdfasdf
asdfasdfasdf: command not found
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\u`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[92m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) export PS1='\u`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[92m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) asdfasd
faasdfasd: command not found

brick Programming/Website (master) fa
fa: command not found
brick Programming/Website (master) jjasldkfjj
jjasldkfjj: command not found
brick Programming/Website (master) export PS1='\u`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[92m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) akjsfjjsjdjf
akjsfjjsjdjf: command not found
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master)
brick Programming/Website (master)
brick Programming/Website (master)
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) asdfasd
asdfasd: command not found

brick Programming/Website (master)
brick Programming/Website (master)
brick Programming/Website (master)
brick Programming/Website (master)
brick Programming/Website (master)
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\u`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[92m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) export PS1='\u`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[002m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) export PS1='\u`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[92m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) export PS1='\u`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[92m\]"; fi``__git_ps1` `echo -e "\[\033[38;5;002m\]"`'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\u`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) asdf

Command 'asdf' not found, did you mean:

  command 'adsf' from deb ruby-adsf (1.4.3+dfsg1-1)
  command 'sadf' from deb sysstat (12.2.0-2)
  command 'asdfg' from deb aoeui (1.7+20160302.git4e5dee9-2)
  command 'sdf' from deb sdf (2.001+1-7)

Try: sudo apt install <deb name>

brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='`echo -e "\[\033[38;5;015m\]`"\u`echo -e "\[\033[00m\]``if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 |
rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
-bash: command substitution: line 1: unexpected EOF while looking for matching `"'
-bash: command substitution: line 2: syntax error: unexpected end of file
-bash: command substitution: line 1: unexpected EOF while looking for matching `"'
-bash: command substitution: line 2: syntax error: unexpected end of file
"brick Programming/Website (master) export PS1='`echo -e "\[\033[38;5;015m\]"`\u`echo -e "\[\033[00m\]``if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
-bash: command substitution: line 1: unexpected EOF while looking for matching `"'
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) export PS1='`echo -e "\[\033[38;5;015m\]"`\u`echo -e "\[\033[00m\]``if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 |
rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
-bash: command substitution: line 1: unexpected EOF while looking for matching `"'
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) export PS1='`echo -e "\[\033[38;5;015m\]"`\u`echo -e "\[\033[00m\]` `if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
-bash: command substitution: line 1: unexpected EOF while looking for matching `"'
-bash: command substitution: line 2: syntax error: unexpected end of file
brick  Programming/Website (master) export PS1='`echo -e "\[\033[38;5;015m\]"`\u`echo -e "\[\033[00m\]``if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
-bash: command substitution: line 1: unexpected EOF while looking for matching `"'
-bash: command substitution: line 2: syntax error: unexpected end of file
brick Programming/Website (master) export PS1='`echo -e "\[\033[38;5;015m\]"`\u`echo -e "\[\033[00m\]"``if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) export PS1='`echo -e "\[\033[38;5;015m\]"`\u`echo -e "\[\033[00m\]"``if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) asdf

Command 'asdf' not found, did you mean:

  command 'sdf' from deb sdf (2.001+1-7)
  command 'adsf' from deb ruby-adsf (1.4.3+dfsg1-1)
  command 'asdfg' from deb aoeui (1.7+20160302.git4e5dee9-2)
  command 'sadf' from deb sysstat (12.2.0-2)

Try: sudo apt install <deb name>

brick Programming/Website (master) asdf

Command 'asdf' not found, did you mean:

  command 'adsf' from deb ruby-adsf (1.4.3+dfsg1-1)
  command 'asdfg' from deb aoeui (1.7+20160302.git4e5dee9-2)
  command 'sadf' from deb sysstat (12.2.0-2)
  command 'sdf' from deb sdf (2.001+1-7)

Try: sudo apt install <deb name>

brick Programming/Website (master) asdf

Command 'asdf' not found, did you mean:

  command 'sdf' from deb sdf (2.001+1-7)
  command 'sadf' from deb sysstat (12.2.0-2)
  command 'adsf' from deb ruby-adsf (1.4.3+dfsg1-1)
  command 'asdfg' from deb aoeui (1.7+20160302.git4e5dee9-2)

Try: sudo apt install <deb name>

brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W`echo "\[\033[00m\]"``if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi``__git_ps1` `echo -e "\[\033[00m\]"`'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) asdf

Command 'asdf' not found, did you mean:

  command 'sdf' from deb sdf (2.001+1-7)
  command 'asdfg' from deb aoeui (1.7+20160302.git4e5dee9-2)
  command 'adsf' from deb ruby-adsf (1.4.3+dfsg1-1)
  command 'sadf' from deb sysstat (12.2.0-2)

Try: sudo apt install <deb name>

brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if
[[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) cd ..
warning: Not a git repository. Use --no-index to compare two paths outside a working tree
usage: git diff --no-index [<options>] <path> <path>

Diff output format options
    -p, --patch           generate patch
    -s, --no-patch        suppress diff output
    -u                    generate patch
    -U, --unified[=<n>]   generate diffs with <n> lines context
    -W, --function-context
                          generate diffs with <n> lines context
    --raw                 generate the diff in raw format
    --patch-with-raw      synonym for '-p --raw'
    --patch-with-stat     synonym for '-p --stat'
    --numstat             machine friendly --stat
    --shortstat           output only the last line of --stat
    -X, --dirstat[=<param1,param2>...]
                          output the distribution of relative amount of changes for each sub-directory
    --cumulative          synonym for --dirstat=cumulative
    --dirstat-by-file[=<param1,param2>...]
                          synonym for --dirstat=files,param1,param2...
    --check               warn if changes introduce conflict markers or whitespace errors
    --summary             condensed summary such as creations, renames and mode changes
    --name-only           show only names of changed files
    --name-status         show only names and status of changed files
    --stat[=<width>[,<name-width>[,<count>]]]
                          generate diffstat
    --stat-width <width>  generate diffstat with a given width
    --stat-name-width <width>
                          generate diffstat with a given name width
    --stat-graph-width <width>
                          generate diffstat with a given graph width
    --stat-count <count>  generate diffstat with limited lines
    --compact-summary     generate compact summary in diffstat
    --binary              output a binary diff that can be applied
    --full-index          show full pre- and post-image object names on the "index" lines
    --color[=<when>]      show colored diff
    --ws-error-highlight <kind>
                          highlight whitespace errors in the 'context', 'old' or 'new' lines in the diff
    -z                    do not munge pathnames and use NULs as output field terminators in --raw or --numstat
    --abbrev[=<n>]        use <n> digits to display SHA-1s
    --src-prefix <prefix>
                          show the given source prefix instead of "a/"
    --dst-prefix <prefix>
                          show the given destination prefix instead of "b/"
    --line-prefix <prefix>
                          prepend an additional prefix to every line of output
    --no-prefix           do not show any source or destination prefix
    --inter-hunk-context <n>
                          show context between diff hunks up to the specified number of lines
    --output-indicator-new <char>
                          specify the character to indicate a new line instead of '+'
    --output-indicator-old <char>
                          specify the character to indicate an old line instead of '-'
    --output-indicator-context <char>
                          specify the character to indicate a context instead of ' '

Diff rename options
    -B, --break-rewrites[=<n>[/<m>]]
                          break complete rewrite changes into pairs of delete and create
    -M, --find-renames[=<n>]
                          detect renames
    -D, --irreversible-delete
                          omit the preimage for deletes
    -C, --find-copies[=<n>]
                          detect copies
    --find-copies-harder  use unmodified files as source to find copies
    --no-renames          disable rename detection
    --rename-empty        use empty blobs as rename source
    --follow              continue listing the history of a file beyond renames
    -l <n>                prevent rename/copy detection if the number of rename/copy targets exceeds given limit

Diff algorithm options
    --minimal             produce the smallest possible diff
    -w, --ignore-all-space
                          ignore whitespace when comparing lines
    -b, --ignore-space-change
                          ignore changes in amount of whitespace
    --ignore-space-at-eol
                          ignore changes in whitespace at EOL
    --ignore-cr-at-eol    ignore carrier-return at the end of line
    --ignore-blank-lines  ignore changes whose lines are all blank
    --indent-heuristic    heuristic to shift diff hunk boundaries for easy reading
    --patience            generate diff using the "patience diff" algorithm
    --histogram           generate diff using the "histogram diff" algorithm
    --diff-algorithm <algorithm>
                          choose a diff algorithm
    --anchored <text>     generate diff using the "anchored diff" algorithm
    --word-diff[=<mode>]  show word diff, using <mode> to delimit changed words
    --word-diff-regex <regex>
                          use <regex> to decide what a word is
    --color-words[=<regex>]
                          equivalent to --word-diff=color --word-diff-regex=<regex>
    --color-moved[=<mode>]
                          moved lines of code are colored differently
    --color-moved-ws <mode>
                          how white spaces are ignored in --color-moved

Other diff options
    --relative[=<prefix>]
                          when run from subdir, exclude changes outside and show relative paths
    -a, --text            treat all files as text
    -R                    swap two inputs, reverse the diff
    --exit-code           exit with 1 if there were differences, 0 otherwise
    --quiet               disable all output of the program
    --ext-diff            allow an external diff helper to be executed
    --textconv            run external text conversion filters when comparing binary files
    --ignore-submodules[=<when>]
                          ignore changes to submodules in the diff generation
    --submodule[=<format>]
                          specify how differences in submodules are shown
    --ita-invisible-in-index
                          hide 'git add -N' entries from the index
    --ita-visible-in-index
                          treat 'git add -N' entries as real in the index
    -S <string>           look for differences that change the number of occurrences of the specified string
    -G <regex>            look for differences that change the number of occurrences of the specified regex
    --pickaxe-all         show all changes in the changeset with -S or -G
    --pickaxe-regex       treat <string> in -S as extended POSIX regular expression
    -O <file>             control the order in which files appear in the output
    --find-object <object-id>
                          look for differences that change the number of occurrences of the specified object
    --diff-filter [(A|C|D|M|R|T|U|X|B)...[*]]
                          select files by diff type
    --output <file>       Output to a specific file

brick Projects/Programming ls
'0.005$ problem'                           'Javascript interview with a Google engineer'   Steganography                                   'copy files.txt'                    'music generator'
'2d project timeline'                      'Markdown Inline Formatter'                    'Stock Market'                                   'copy proof'                        'new emilien.ml website'
'6th Sense'                                'Markup Language'                              'Stock Trading Strategy'                         'css grid test'                     'new language test'
'AI Image Compression'                     'Messenger Always Active'                      'Technical interview with a Microsoft engineer'  'custom launchpad'                  'noise canceler (not working)'
'Among Us Color Modifier'                  'Messenger Phishing'                           'Virus Maker Website'                            'deep writing'                      'old html stuff'
'Auto Clan Castle COC'                     'Minecraft Chat Large Font'                    'Virus Maker random versions'                    'eb ai'                             'pi finder'
 AutoCloudBackup                           'Modular Drawers Generator'                     WebInfo                                         'emma comment flood (not working)'  'poème deep freeze stealer'
 AutoSDCard                                'Monty Hall Problem'                           'WebInfo V4'                                     'emma website redesign'             'prime finder'
'Bee Movie Spam'                            MultiToastJS                                   Website                                         'emoji transfer'                    'programming challenge'
'Betaflight Blackbox Viewer'               'Music Offset Generator'                       'Website DOS'                                    'epilepsy lol'                       python-https-server.py
'CSBE Account Finder'                      'Neumorphic Design'                             Website-Old                                     'fibonacci finder'                  'random games like limbo'
'Caps Hotkeys V2'                          'Node Emilien.ml'                              'Word Generation'                                'fundemental particle simulation'   'réglages server'
'Card Bar Code'                            'NodeJS Simple Server'                         'Workflow Command'                               'haaacked website'                  'simple keyloggerV2'
'Cellular Automata'                        'Physics Range Analysis'                       'Youtube View Generator'                          hanoi.html                         'storage unit website'
'Emilien.ml V3'                            'PyBot Beta 1.0'                               'agar.io bot'                                    'hose finite element analysis'      'strike compiler (not working)'
'Encod-R 2.0'                              'Python Spam Bot'                              'artificial intelligence'                        'ip logger'                         'test multiplayer game'
'FizzBuzz, Ohe Simple Interview Question'   RCD                                           'assembly tests'                                 'javascript audiocontext test'       toUpper.py
'Font Generator'                           'RPi Server'                                    autorun.txt                                     'javascript scope test'             'vbs viruses'
'Google Calendar Automation'               'Random C++ Programs'                          'binary splitter'                                'kahoothack (not working)'          'vpn server test (not working)'
'HTML Virus'                               'Russian Roulette'                              blockUserInput.ps1                              'learning rust'                     'web worker test'
'Hello World Game'                          Scylla                                         comment                                         'mix parser'
'JScript Wifi Remover'                     'Spread-R JS'                                  'compiler tests'                                 'mix website idea'
warning: Not a git repository. Use --no-index to compare two paths outside a working tree
usage: git diff --no-index [<options>] <path> <path>

Diff output format options
    -p, --patch           generate patch
    -s, --no-patch        suppress diff output
    -u                    generate patch
    -U, --unified[=<n>]   generate diffs with <n> lines context
    -W, --function-context
                          generate diffs with <n> lines context
    --raw                 generate the diff in raw format
    --patch-with-raw      synonym for '-p --raw'
    --patch-with-stat     synonym for '-p --stat'
    --numstat             machine friendly --stat
    --shortstat           output only the last line of --stat
    -X, --dirstat[=<param1,param2>...]
                          output the distribution of relative amount of changes for each sub-directory
    --cumulative          synonym for --dirstat=cumulative
    --dirstat-by-file[=<param1,param2>...]
                          synonym for --dirstat=files,param1,param2...
    --check               warn if changes introduce conflict markers or whitespace errors
    --summary             condensed summary such as creations, renames and mode changes
    --name-only           show only names of changed files
    --name-status         show only names and status of changed files
    --stat[=<width>[,<name-width>[,<count>]]]
                          generate diffstat
    --stat-width <width>  generate diffstat with a given width
    --stat-name-width <width>
                          generate diffstat with a given name width
    --stat-graph-width <width>
                          generate diffstat with a given graph width
    --stat-count <count>  generate diffstat with limited lines
    --compact-summary     generate compact summary in diffstat
    --binary              output a binary diff that can be applied
    --full-index          show full pre- and post-image object names on the "index" lines
    --color[=<when>]      show colored diff
    --ws-error-highlight <kind>
                          highlight whitespace errors in the 'context', 'old' or 'new' lines in the diff
    -z                    do not munge pathnames and use NULs as output field terminators in --raw or --numstat
    --abbrev[=<n>]        use <n> digits to display SHA-1s
    --src-prefix <prefix>
                          show the given source prefix instead of "a/"
    --dst-prefix <prefix>
                          show the given destination prefix instead of "b/"
    --line-prefix <prefix>
                          prepend an additional prefix to every line of output
    --no-prefix           do not show any source or destination prefix
    --inter-hunk-context <n>
                          show context between diff hunks up to the specified number of lines
    --output-indicator-new <char>
                          specify the character to indicate a new line instead of '+'
    --output-indicator-old <char>
                          specify the character to indicate an old line instead of '-'
    --output-indicator-context <char>
                          specify the character to indicate a context instead of ' '

Diff rename options
    -B, --break-rewrites[=<n>[/<m>]]
                          break complete rewrite changes into pairs of delete and create
    -M, --find-renames[=<n>]
                          detect renames
    -D, --irreversible-delete
                          omit the preimage for deletes
    -C, --find-copies[=<n>]
                          detect copies
    --find-copies-harder  use unmodified files as source to find copies
    --no-renames          disable rename detection
    --rename-empty        use empty blobs as rename source
    --follow              continue listing the history of a file beyond renames
    -l <n>                prevent rename/copy detection if the number of rename/copy targets exceeds given limit

Diff algorithm options
    --minimal             produce the smallest possible diff
    -w, --ignore-all-space
                          ignore whitespace when comparing lines
    -b, --ignore-space-change
                          ignore changes in amount of whitespace
    --ignore-space-at-eol
                          ignore changes in whitespace at EOL
    --ignore-cr-at-eol    ignore carrier-return at the end of line
    --ignore-blank-lines  ignore changes whose lines are all blank
    --indent-heuristic    heuristic to shift diff hunk boundaries for easy reading
    --patience            generate diff using the "patience diff" algorithm
    --histogram           generate diff using the "histogram diff" algorithm
    --diff-algorithm <algorithm>
                          choose a diff algorithm
    --anchored <text>     generate diff using the "anchored diff" algorithm
    --word-diff[=<mode>]  show word diff, using <mode> to delimit changed words
    --word-diff-regex <regex>
                          use <regex> to decide what a word is
    --color-words[=<regex>]
                          equivalent to --word-diff=color --word-diff-regex=<regex>
    --color-moved[=<mode>]
                          moved lines of code are colored differently
    --color-moved-ws <mode>
                          how white spaces are ignored in --color-moved

Other diff options
    --relative[=<prefix>]
                          when run from subdir, exclude changes outside and show relative paths
    -a, --text            treat all files as text
    -R                    swap two inputs, reverse the diff
    --exit-code           exit with 1 if there were differences, 0 otherwise
    --quiet               disable all output of the program
    --ext-diff            allow an external diff helper to be executed
    --textconv            run external text conversion filters when comparing binary files
    --ignore-submodules[=<when>]
                          ignore changes to submodules in the diff generation
    --submodule[=<format>]
                          specify how differences in submodules are shown
    --ita-invisible-in-index
                          hide 'git add -N' entries from the index
    --ita-visible-in-index
                          treat 'git add -N' entries as real in the index
    -S <string>           look for differences that change the number of occurrences of the specified string
    -G <regex>            look for differences that change the number of occurrences of the specified regex
    --pickaxe-all         show all changes in the changeset with -S or -G
    --pickaxe-regex       treat <string> in -S as extended POSIX regular expression
    -O <file>             control the order in which files appear in the output
    --find-object <object-id>
                          look for differences that change the number of occurrences of the specified object
    --diff-filter [(A|C|D|M|R|T|U|X|B)...[*]]
                          select files by diff type
    --output <file>       Output to a specific file

brick Projects/Programming cd Website
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if
[[ $({ git -C && git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi``__git_ps1` \[\033[00m\]'
no directory given for -C
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if
[[ $({ git -C . && git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if
[[ $(git -C .) -ne 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
-bash: [[: usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.: syntax error in expression (error token is ": git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.")
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if
[[ $(git -C .) -ne 0 ]]; then ( if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi;) fi``__git_ps1` \[\033[00m\]'
-bash: [[: usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.: syntax error in expression (error token is ": git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.")
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if
[[ $(git -C .) -ne 0 ]]; then ( if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi); fi``__git_ps1` \[\033[00m\]'
-bash: [[: usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.: syntax error in expression (error token is ": git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.")
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if
[[ $(git -C .) -ne 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
-bash: [[: usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.: syntax error in expression (error token is ": git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.")
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
-bash: [[: usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.: syntax error in expression (error token is ": git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.")
brick Programming/Website (master) git -C
no directory given for -C
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]
-bash: [[: usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.: syntax error in expression (error token is ": git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.")
brick Programming/Website (master) git -C .
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
-bash: [[: usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.: syntax error in expression (error token is ": git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.")
brick Programming/Website (master) git -C .
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
-bash: [[: usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.: syntax error in expression (error token is ": git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.")
brick Programming/Website (master) export PS1=""
git -C .
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
git -C . --rev-parse
unknown option: --rev-parse
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]
git -C .
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
asdfasdf
asdfasdf: command not found
git -C .
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
pwd
/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website
git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean
git -C .
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone             Clone a repository into a new directory
   init              Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add               Add file contents to the index
   mv                Move or rename a file, a directory, or a symlink
   restore           Restore working tree files
   rm                Remove files from the working tree and from the index
   sparse-checkout   Initialize and modify the sparse-checkout

examine the history and state (see also: git help revisions)
   bisect            Use binary search to find the commit that introduced a bug
   diff              Show changes between commits, commit and working tree, etc
   grep              Print lines matching a pattern
   log               Show commit logs
   show              Show various types of objects
   status            Show the working tree status

grow, mark and tweak your common history
   branch            List, create, or delete branches
   commit            Record changes to the repository
   merge             Join two or more development histories together
   rebase            Reapply commits on top of another base tip
   reset             Reset current HEAD to the specified state
   switch            Switch branches
   tag               Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch             Download objects and refs from another repository
   pull              Fetch from and integrate with another repository or a local branch
   push              Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.
git -C . rev-parse
git -C . rev-parse
export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if [[ $(git -C . rev-parse) -ne 0 ]];
then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) cd ..
fatal: not a git repository (or any parent up to mount point /mnt)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
brick Projects/Programming ls
'0.005$ problem'                           'Javascript interview with a Google engineer'   Steganography                                   'copy files.txt'                    'music generator'
'2d project timeline'                      'Markdown Inline Formatter'                    'Stock Market'                                   'copy proof'                        'new emilien.ml website'
'6th Sense'                                'Markup Language'                              'Stock Trading Strategy'                         'css grid test'                     'new language test'
'AI Image Compression'                     'Messenger Always Active'                      'Technical interview with a Microsoft engineer'  'custom launchpad'                  'noise canceler (not working)'
'Among Us Color Modifier'                  'Messenger Phishing'                           'Virus Maker Website'                            'deep writing'                      'old html stuff'
'Auto Clan Castle COC'                     'Minecraft Chat Large Font'                    'Virus Maker random versions'                    'eb ai'                             'pi finder'
 AutoCloudBackup                           'Modular Drawers Generator'                     WebInfo                                         'emma comment flood (not working)'  'poème deep freeze stealer'
 AutoSDCard                                'Monty Hall Problem'                           'WebInfo V4'                                     'emma website redesign'             'prime finder'
'Bee Movie Spam'                            MultiToastJS                                   Website                                         'emoji transfer'                    'programming challenge'
'Betaflight Blackbox Viewer'               'Music Offset Generator'                       'Website DOS'                                    'epilepsy lol'                       python-https-server.py
'CSBE Account Finder'                      'Neumorphic Design'                             Website-Old                                     'fibonacci finder'                  'random games like limbo'
'Caps Hotkeys V2'                          'Node Emilien.ml'                              'Word Generation'                                'fundemental particle simulation'   'réglages server'
'Card Bar Code'                            'NodeJS Simple Server'                         'Workflow Command'                               'haaacked website'                  'simple keyloggerV2'
'Cellular Automata'                        'Physics Range Analysis'                       'Youtube View Generator'                          hanoi.html                         'storage unit website'
'Emilien.ml V3'                            'PyBot Beta 1.0'                               'agar.io bot'                                    'hose finite element analysis'      'strike compiler (not working)'
'Encod-R 2.0'                              'Python Spam Bot'                              'artificial intelligence'                        'ip logger'                         'test multiplayer game'
'FizzBuzz, Ohe Simple Interview Question'   RCD                                           'assembly tests'                                 'javascript audiocontext test'       toUpper.py
'Font Generator'                           'RPi Server'                                    autorun.txt                                     'javascript scope test'             'vbs viruses'
'Google Calendar Automation'               'Random C++ Programs'                          'binary splitter'                                'kahoothack (not working)'          'vpn server test (not working)'
'HTML Virus'                               'Russian Roulette'                              blockUserInput.ps1                              'learning rust'                     'web worker test'
'Hello World Game'                          Scylla                                         comment                                         'mix parser'
'JScript Wifi Remover'                     'Spread-R JS'                                  'compiler tests'                                 'mix website idea'
fatal: not a git repository (or any parent up to mount point /mnt)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
brick Projects/Programming
fatal: not a git repository (or any parent up to mount point /mnt)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
brick Projects/Programming
fatal: not a git repository (or any parent up to mount point /mnt)
Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
brick Projects/Programming cd Website
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if [[ $(git -C . rev-parse > dev/nul) -ne 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
-bash: dev/nul: No such file or directory
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if [[ $(git -C . rev-parse &> /dev/nul) -ne 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
-bash: /dev/nul: Permission denied
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if
[[ $(git -C . rev-parse > /dev/nul) -ne 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
-bash: /dev/nul: Permission denied
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if [[ $(git -C . rev-parse &> /dev/null) -ne 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) asdf

Command 'asdf' not found, did you mean:

  command 'sadf' from deb sysstat (12.2.0-2)
  command 'asdfg' from deb aoeui (1.7+20160302.git4e5dee9-2)
  command 'adsf' from deb ruby-adsf (1.4.3+dfsg1-1)
  command 'sdf' from deb sdf (2.001+1-7)

Try: sudo apt install <deb name>

brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) cd ..
brick Projects/Programming ls
'0.005$ problem'                           'Javascript interview with a Google engineer'   Steganography                                   'copy files.txt'                    'music generator'
'2d project timeline'                      'Markdown Inline Formatter'                    'Stock Market'                                   'copy proof'                        'new emilien.ml website'
'6th Sense'                                'Markup Language'                              'Stock Trading Strategy'                         'css grid test'                     'new language test'
'AI Image Compression'                     'Messenger Always Active'                      'Technical interview with a Microsoft engineer'  'custom launchpad'                  'noise canceler (not working)'
'Among Us Color Modifier'                  'Messenger Phishing'                           'Virus Maker Website'                            'deep writing'                      'old html stuff'
'Auto Clan Castle COC'                     'Minecraft Chat Large Font'                    'Virus Maker random versions'                    'eb ai'                             'pi finder'
 AutoCloudBackup                           'Modular Drawers Generator'                     WebInfo                                         'emma comment flood (not working)'  'poème deep freeze stealer'
 AutoSDCard                                'Monty Hall Problem'                           'WebInfo V4'                                     'emma website redesign'             'prime finder'
'Bee Movie Spam'                            MultiToastJS                                   Website                                         'emoji transfer'                    'programming challenge'
'Betaflight Blackbox Viewer'               'Music Offset Generator'                       'Website DOS'                                    'epilepsy lol'                       python-https-server.py
'CSBE Account Finder'                      'Neumorphic Design'                             Website-Old                                     'fibonacci finder'                  'random games like limbo'
'Caps Hotkeys V2'                          'Node Emilien.ml'                              'Word Generation'                                'fundemental particle simulation'   'réglages server'
'Card Bar Code'                            'NodeJS Simple Server'                         'Workflow Command'                               'haaacked website'                  'simple keyloggerV2'
'Cellular Automata'                        'Physics Range Analysis'                       'Youtube View Generator'                          hanoi.html                         'storage unit website'
'Emilien.ml V3'                            'PyBot Beta 1.0'                               'agar.io bot'                                    'hose finite element analysis'      'strike compiler (not working)'
'Encod-R 2.0'                              'Python Spam Bot'                              'artificial intelligence'                        'ip logger'                         'test multiplayer game'
'FizzBuzz, Ohe Simple Interview Question'   RCD                                           'assembly tests'                                 'javascript audiocontext test'       toUpper.py
'Font Generator'                           'RPi Server'                                    autorun.txt                                     'javascript scope test'             'vbs viruses'
'Google Calendar Automation'               'Random C++ Programs'                          'binary splitter'                                'kahoothack (not working)'          'vpn server test (not working)'
'HTML Virus'                               'Russian Roulette'                              blockUserInput.ps1                              'learning rust'                     'web worker test'
'Hello World Game'                          Scylla                                         comment                                         'mix parser'
'JScript Wifi Remover'                     'Spread-R JS'                                  'compiler tests'                                 'mix website idea'
brick Projects/Programming cd Website
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if [[ $(git -C . rev-parse &> /dev/null) -ne 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if [[ $?(git -C . rev-parse &> /dev/null) -ne 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
-bash: [[: 0(git -C . rev-parse &> /dev/null): syntax error in expression (error token is "(git -C . rev-parse &> /dev/null)")
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`if [[ $(git -C . rev-parse &> /dev/null) -ne 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -gt 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) cd ..
warning: Not a git repository. Use --no-index to compare two paths outside a working tree
usage: git diff --no-index [<options>] <path> <path>

Diff output format options
    -p, --patch           generate patch
    -s, --no-patch        suppress diff output
    -u                    generate patch
    -U, --unified[=<n>]   generate diffs with <n> lines context
    -W, --function-context
                          generate diffs with <n> lines context
    --raw                 generate the diff in raw format
    --patch-with-raw      synonym for '-p --raw'
    --patch-with-stat     synonym for '-p --stat'
    --numstat             machine friendly --stat
    --shortstat           output only the last line of --stat
    -X, --dirstat[=<param1,param2>...]
                          output the distribution of relative amount of changes for each sub-directory
    --cumulative          synonym for --dirstat=cumulative
    --dirstat-by-file[=<param1,param2>...]
                          synonym for --dirstat=files,param1,param2...
    --check               warn if changes introduce conflict markers or whitespace errors
    --summary             condensed summary such as creations, renames and mode changes
    --name-only           show only names of changed files
    --name-status         show only names and status of changed files
    --stat[=<width>[,<name-width>[,<count>]]]
                          generate diffstat
    --stat-width <width>  generate diffstat with a given width
    --stat-name-width <width>
                          generate diffstat with a given name width
    --stat-graph-width <width>
                          generate diffstat with a given graph width
    --stat-count <count>  generate diffstat with limited lines
    --compact-summary     generate compact summary in diffstat
    --binary              output a binary diff that can be applied
    --full-index          show full pre- and post-image object names on the "index" lines
    --color[=<when>]      show colored diff
    --ws-error-highlight <kind>
                          highlight whitespace errors in the 'context', 'old' or 'new' lines in the diff
    -z                    do not munge pathnames and use NULs as output field terminators in --raw or --numstat
    --abbrev[=<n>]        use <n> digits to display SHA-1s
    --src-prefix <prefix>
                          show the given source prefix instead of "a/"
    --dst-prefix <prefix>
                          show the given destination prefix instead of "b/"
    --line-prefix <prefix>
                          prepend an additional prefix to every line of output
    --no-prefix           do not show any source or destination prefix
    --inter-hunk-context <n>
                          show context between diff hunks up to the specified number of lines
    --output-indicator-new <char>
                          specify the character to indicate a new line instead of '+'
    --output-indicator-old <char>
                          specify the character to indicate an old line instead of '-'
    --output-indicator-context <char>
                          specify the character to indicate a context instead of ' '

Diff rename options
    -B, --break-rewrites[=<n>[/<m>]]
                          break complete rewrite changes into pairs of delete and create
    -M, --find-renames[=<n>]
                          detect renames
    -D, --irreversible-delete
                          omit the preimage for deletes
    -C, --find-copies[=<n>]
                          detect copies
    --find-copies-harder  use unmodified files as source to find copies
    --no-renames          disable rename detection
    --rename-empty        use empty blobs as rename source
    --follow              continue listing the history of a file beyond renames
    -l <n>                prevent rename/copy detection if the number of rename/copy targets exceeds given limit

Diff algorithm options
    --minimal             produce the smallest possible diff
    -w, --ignore-all-space
                          ignore whitespace when comparing lines
    -b, --ignore-space-change
                          ignore changes in amount of whitespace
    --ignore-space-at-eol
                          ignore changes in whitespace at EOL
    --ignore-cr-at-eol    ignore carrier-return at the end of line
    --ignore-blank-lines  ignore changes whose lines are all blank
    --indent-heuristic    heuristic to shift diff hunk boundaries for easy reading
    --patience            generate diff using the "patience diff" algorithm
    --histogram           generate diff using the "histogram diff" algorithm
    --diff-algorithm <algorithm>
                          choose a diff algorithm
    --anchored <text>     generate diff using the "anchored diff" algorithm
    --word-diff[=<mode>]  show word diff, using <mode> to delimit changed words
    --word-diff-regex <regex>
                          use <regex> to decide what a word is
    --color-words[=<regex>]
                          equivalent to --word-diff=color --word-diff-regex=<regex>
    --color-moved[=<mode>]
                          moved lines of code are colored differently
    --color-moved-ws <mode>
                          how white spaces are ignored in --color-moved

Other diff options
    --relative[=<prefix>]
                          when run from subdir, exclude changes outside and show relative paths
    -a, --text            treat all files as text
    -R                    swap two inputs, reverse the diff
    --exit-code           exit with 1 if there were differences, 0 otherwise
    --quiet               disable all output of the program
    --ext-diff            allow an external diff helper to be executed
    --textconv            run external text conversion filters when comparing binary files
    --ignore-submodules[=<when>]
                          ignore changes to submodules in the diff generation
    --submodule[=<format>]
                          specify how differences in submodules are shown
    --ita-invisible-in-index
                          hide 'git add -N' entries from the index
    --ita-visible-in-index
                          treat 'git add -N' entries as real in the index
    -S <string>           look for differences that change the number of occurrences of the specified string
    -G <regex>            look for differences that change the number of occurrences of the specified regex
    --pickaxe-all         show all changes in the changeset with -S or -G
    --pickaxe-regex       treat <string> in -S as extended POSIX regular expression
    -O <file>             control the order in which files appear in the output
    --find-object <object-id>
                          look for differences that change the number of occurrences of the specified object
    --diff-filter [(A|C|D|M|R|T|U|X|B)...[*]]
                          select files by diff type
    --output <file>       Output to a specific file

brick Projects/Programming cd Website
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) cd ..
brick Projects/Programming cd Website
brick Programming/Website (master) .s
.s: command not found
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\[\033[38;5;015m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) export PS1='\[\033[38;5;088m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) lkj;alskdjf
lkj: command not found
alskdjf: command not found
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[38;5;002m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) touch test
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  test  website
brick Programming/Website (master) rm test
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean
brick Programming/Website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) touch test
brick Programming/Website (master) git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test

nothing added to commit but untracked files present (use "git add" to track)
brick Programming/Website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) git diff --numstat
brick Programming/Website (master) git diff --cached --numstat
brick Programming/Website (master) git diff --no-index --numstat
usage: git diff --no-index [<options>] <path> <path>

Diff output format options
    -p, --patch           generate patch
    -s, --no-patch        suppress diff output
    -u                    generate patch
    -U, --unified[=<n>]   generate diffs with <n> lines context
    -W, --function-context
                          generate diffs with <n> lines context
    --raw                 generate the diff in raw format
    --patch-with-raw      synonym for '-p --raw'
    --patch-with-stat     synonym for '-p --stat'
    --numstat             machine friendly --stat
    --shortstat           output only the last line of --stat
    -X, --dirstat[=<param1,param2>...]
                          output the distribution of relative amount of changes for each sub-directory
    --cumulative          synonym for --dirstat=cumulative
    --dirstat-by-file[=<param1,param2>...]
                          synonym for --dirstat=files,param1,param2...
    --check               warn if changes introduce conflict markers or whitespace errors
    --summary             condensed summary such as creations, renames and mode changes
    --name-only           show only names of changed files
    --name-status         show only names and status of changed files
    --stat[=<width>[,<name-width>[,<count>]]]
                          generate diffstat
    --stat-width <width>  generate diffstat with a given width
    --stat-name-width <width>
                          generate diffstat with a given name width
    --stat-graph-width <width>
                          generate diffstat with a given graph width
    --stat-count <count>  generate diffstat with limited lines
    --compact-summary     generate compact summary in diffstat
    --binary              output a binary diff that can be applied
    --full-index          show full pre- and post-image object names on the "index" lines
    --color[=<when>]      show colored diff
    --ws-error-highlight <kind>
                          highlight whitespace errors in the 'context', 'old' or 'new' lines in the diff
    -z                    do not munge pathnames and use NULs as output field terminators in --raw or --numstat
    --abbrev[=<n>]        use <n> digits to display SHA-1s
    --src-prefix <prefix>
                          show the given source prefix instead of "a/"
    --dst-prefix <prefix>
                          show the given destination prefix instead of "b/"
    --line-prefix <prefix>
                          prepend an additional prefix to every line of output
    --no-prefix           do not show any source or destination prefix
    --inter-hunk-context <n>
                          show context between diff hunks up to the specified number of lines
    --output-indicator-new <char>
                          specify the character to indicate a new line instead of '+'
    --output-indicator-old <char>
                          specify the character to indicate an old line instead of '-'
    --output-indicator-context <char>
                          specify the character to indicate a context instead of ' '

Diff rename options
    -B, --break-rewrites[=<n>[/<m>]]
                          break complete rewrite changes into pairs of delete and create
    -M, --find-renames[=<n>]
                          detect renames
    -D, --irreversible-delete
                          omit the preimage for deletes
    -C, --find-copies[=<n>]
                          detect copies
    --find-copies-harder  use unmodified files as source to find copies
    --no-renames          disable rename detection
    --rename-empty        use empty blobs as rename source
    --follow              continue listing the history of a file beyond renames
    -l <n>                prevent rename/copy detection if the number of rename/copy targets exceeds given limit

Diff algorithm options
    --minimal             produce the smallest possible diff
    -w, --ignore-all-space
                          ignore whitespace when comparing lines
    -b, --ignore-space-change
                          ignore changes in amount of whitespace
    --ignore-space-at-eol
                          ignore changes in whitespace at EOL
    --ignore-cr-at-eol    ignore carrier-return at the end of line
    --ignore-blank-lines  ignore changes whose lines are all blank
    --indent-heuristic    heuristic to shift diff hunk boundaries for easy reading
    --patience            generate diff using the "patience diff" algorithm
    --histogram           generate diff using the "histogram diff" algorithm
    --diff-algorithm <algorithm>
                          choose a diff algorithm
    --anchored <text>     generate diff using the "anchored diff" algorithm
    --word-diff[=<mode>]  show word diff, using <mode> to delimit changed words
    --word-diff-regex <regex>
                          use <regex> to decide what a word is
    --color-words[=<regex>]
                          equivalent to --word-diff=color --word-diff-regex=<regex>
    --color-moved[=<mode>]
                          moved lines of code are colored differently
    --color-moved-ws <mode>
                          how white spaces are ignored in --color-moved

Other diff options
    --relative[=<prefix>]
                          when run from subdir, exclude changes outside and show relative paths
    -a, --text            treat all files as text
    -R                    swap two inputs, reverse the diff
    --exit-code           exit with 1 if there were differences, 0 otherwise
    --quiet               disable all output of the program
    --ext-diff            allow an external diff helper to be executed
    --textconv            run external text conversion filters when comparing binary files
    --ignore-submodules[=<when>]
                          ignore changes to submodules in the diff generation
    --submodule[=<format>]
                          specify how differences in submodules are shown
    --ita-invisible-in-index
                          hide 'git add -N' entries from the index
    --ita-visible-in-index
                          treat 'git add -N' entries as real in the index
    -S <string>           look for differences that change the number of occurrences of the specified string
    -G <regex>            look for differences that change the number of occurrences of the specified regex
    --pickaxe-all         show all changes in the changeset with -S or -G
    --pickaxe-regex       treat <string> in -S as extended POSIX regular expression
    -O <file>             control the order in which files appear in the output
    --find-object <object-id>

                          look for differences that change the number of occurrences of the specified object

    --diff-filter [(A|C|D|M|R|T|U|X|B)...[*]]
                          select files by diff type
    --output <file>       Output to a specific file

brick Programming/Website (master) git diff HEAD
brick Programming/Website (master) git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test

nothing added to commit but untracked files present (use "git add" to track)
brick Programming/Website (master) git stash && git add . && git stash pop && git diff --staged && git reset
No local changes to save
Auto-merging website/pages/index.js
On branch master

Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   test


Dropped refs/stash@{0} (5939681f67bfc3726a7f23b4da74790d72b771cc)
diff --git a/test b/test
new file mode 100644
index 0000000..e69de29
brick Programming/Website (master) git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        test

nothing added to commit but untracked files present (use "git add" to track)
brick Programming/Website (master) git diff --staged
brick Programming/Website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  test  website
brick Programming/Website (master) rm test
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) nano next.config.js
brick Programming/Website (master) nano next.config.js
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) kljalskjdfh
kljalskjdfh: command not found
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Programming/Website (master) cd website/
brick Website/website (master) pwd
/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website/website
brick Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick Website/website (master) nano server.js
brick Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick Website/website (master) rm foo
rm: cannot remove 'foo': No such file or directory
brick Website/website (master) nano server.js
brick Website/website (master) cd ..
brick Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick Programming/Website (master) cdls

Command 'cdls' not found, did you mean:

  command 'ccls' from deb ccls (0.20190823.6-1~ubuntu1.20.04.1)

Try: sudo apt install <deb name>

brick Programming/Website (master) alias cdls='cd "$@" && ls'
brick Programming/Website (master) cdls
brick home/~ cdls
brick home/~
brick home/~
brick home/~
brick home/~
brick home/~ ls
brick home/~ pwd
/home/brick
brick home/~ alias cdls='cd "$@" && ls'
brick home/~ cdls Documents
ls: cannot access 'Documents': No such file or directory
brick home/~ ls
brick home/~ ls
brick home/~ pwd
/home/brick
brick home/~ cdls /mnt/c/Users/brick/Documents/Files/Projects/Programming/Website/website
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick home/~ ls
brick home/~ cd /mnt/c/Users/brick/Documents/Files/Projects/Programming/Website/website
brick Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick Website/website (master) cdls ..
brick
brick home/~ ls
brick home/~ cd /mnt/c/Users/brick/Documents/Files/Projects/Programming/Website/website
brick Website/website (master) alias cdls='cd "./\$@" && ls'
brick Website/website (master) alias cdls='cd "./$@" && ls'
brick Website/website (master) cdls ..
ICON.png  LICENSE  README.md  next.config.js  website
brick Website/website (master) cdls ..
ICON.png  LICENSE  README.md  next.config.js  website
brick Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick Website/website (master) pwd
/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website/website
brick Website/website (master) cdls ..
ICON.png  LICENSE  README.md  next.config.js  website
brick Website/website (master) pwd
/mnt/c/Users/brick/Documents/Files/Projects/Programming/Website/website
brick Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick Website/website (master) alias cdls='cd "$1" && ls'
brick Website/website (master) cdls ..
ICON.png  LICENSE  README.md  next.config.js  website
brick Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick Website/website (master) alias cdls='echo "$1" && ls'
brick Website/website (master) cdls ..

ICON.png  LICENSE  README.md  next.config.js  website
brick Website/website (master) cdls ..

ICON.png  LICENSE  README.md  next.config.js  website
brick Website/website (master) alias cdls='echo "$2" && ls'
brick Website/website (master) cdls ..

ICON.png  LICENSE  README.md  next.config.js  website
brick Website/website (master) alias cdls='echo "$@" && ls'
brick Website/website (master) cdls ..

ICON.png  LICENSE  README.md  next.config.js  website
brick Website/website (master) cdls asdf

ls: cannot access 'asdf': No such file or directory
brick Website/website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick Website/website (master) cdls() {
-bash: syntax error near unexpected token `('
brick Website/website (master)   cd ${$#} && ls ${@:0:$#-1}
-bash: cd: 104: No such file or directory
brick Website/website (master) }ls

Command '}ls' not found, did you mean:

  command 'hls' from deb hfsutils (3.2.6-14)
  command 'bls' from deb bacula-sd (9.4.2-2ubuntu5)
  command 'ils' from deb sleuthkit (4.6.7-1build1)
  command 'fls' from deb sleuthkit (4.6.7-1build1)
  command 'als' from deb atool (0.39.0-10)
  command 'ols' from deb speech-tools (1:2.5.0-8build1)
  command 'ls' from deb coreutils (8.30-3ubuntu2)
  command 'jls' from deb sleuthkit (4.6.7-1build1)

Try: sudo apt install <deb name>

brick Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick Website/website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick Website/website (master) 💎
💎: command not found
brick Website/website (master) export PS1='💎\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi` `pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
💎brick Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
💎brick Website/website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi`💎`pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git
-C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick💎Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick💎Website/website (master) 🕶️
🕶️: command not found
brick💎Website/website (master) ⚙️
⚙️: command not found
brick💎Website/website (master) 🛡️
🛡️: command not found
brick💎Website/website (master) ⚫
⚫: command not found
brick💎Website/website (master) 💲
💲: command not found
brick💎Website/website (master) ➡️
➡️: command not found
brick💎Website/website (master) 🧿
🧿: command not found
brick💎Website/website (master) 🧿
🧿: command not found
brick💎Website/website (master) 🔥
🔥: command not found
brick💎Website/website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi`🔥`pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'\]'
brick🔥Website/website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi`🔥`pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick🔥Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick🔥Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick🔥Website/website (master) 💧
💧: command not found
brick🔥Website/website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi`💧`pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick💧Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick💧Website/website (master) ♟️
♟️: command not found
brick💧Website/website (master) ⌨️
⌨️: command not found
brick💧Website/website (master) 🧪
🧪: command not found
brick💧Website/website (master) 🔧
🔧: command not found
brick💧Website/website (master) 🔗
🔗: command not found
brick💧Website/website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi`🔗`pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick🔗Website/website (master) ls
node_modules  package-lock.json  package.json  pages  private  public  server.js  styles
brick🔗Website/website (master) cd ..
brick🔗Programming/Website (master) cd ..
brick🔗Projects/Programming ls
'0.005$ problem'                           'Javascript interview with a Google engineer'   Steganography                                   'copy files.txt'                    'music generator'
'2d project timeline'                      'Markdown Inline Formatter'                    'Stock Market'                                   'copy proof'                        'new emilien.ml website'
'6th Sense'                                'Markup Language'                              'Stock Trading Strategy'                         'css grid test'                     'new language test'
'AI Image Compression'                     'Messenger Always Active'                      'Technical interview with a Microsoft engineer'  'custom launchpad'                  'noise canceler (not working)'
'Among Us Color Modifier'                  'Messenger Phishing'                           'Virus Maker Website'                            'deep writing'                      'old html stuff'
'Auto Clan Castle COC'                     'Minecraft Chat Large Font'                    'Virus Maker random versions'                    'eb ai'                             'pi finder'
 AutoCloudBackup                           'Modular Drawers Generator'                     WebInfo                                         'emma comment flood (not working)'  'poème deep freeze stealer'
 AutoSDCard                                'Monty Hall Problem'                           'WebInfo V4'                                     'emma website redesign'             'prime finder'
'Bee Movie Spam'                            MultiToastJS                                   Website                                         'emoji transfer'                    'programming challenge'
'Betaflight Blackbox Viewer'               'Music Offset Generator'                       'Website DOS'                                    'epilepsy lol'                       python-https-server.py
'CSBE Account Finder'                      'Neumorphic Design'                             Website-Old                                     'fibonacci finder'                  'random games like limbo'
'Caps Hotkeys V2'                          'Node Emilien.ml'                              'Word Generation'                                'fundemental particle simulation'   'réglages server'
'Card Bar Code'                            'NodeJS Simple Server'                         'Workflow Command'                               'haaacked website'                  'simple keyloggerV2'
'Cellular Automata'                        'Physics Range Analysis'                       'Youtube View Generator'                          hanoi.html                         'storage unit website'
'Emilien.ml V3'                            'PyBot Beta 1.0'                               'agar.io bot'                                    'hose finite element analysis'      'strike compiler (not working)'
'Encod-R 2.0'                              'Python Spam Bot'                              'artificial intelligence'                        'ip logger'                         'test multiplayer game'
'FizzBuzz, Ohe Simple Interview Question'   RCD                                           'assembly tests'                                 'javascript audiocontext test'       toUpper.py
'Font Generator'                           'RPi Server'                                    autorun.txt                                     'javascript scope test'             'vbs viruses'
'Google Calendar Automation'               'Random C++ Programs'                          'binary splitter'                                'kahoothack (not working)'          'vpn server test (not working)'
'HTML Virus'                               'Russian Roulette'                              blockUserInput.ps1                              'learning rust'                     'web worker test'
'Hello World Game'                          Scylla                                         comment                                         'mix parser'
'JScript Wifi Remover'                     'Spread-R JS'                                  'compiler tests'                                 'mix website idea'
brick🔗Projects/Programming cd Website
brick🔗Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick🔗Programming/Website (master) export PS1='\[\033[38;5;008m\]\u\[\033[00m\]`if [[ $? -gt 0 ]]; then echo "\[\033[91m\]"; else echo "\[\033[94m\]"; fi`🔗`pwd | rev | cut -d '/' -f 2 | rev`/\W\[\033[00m\]`git -C . rev-parse &> /dev/null``if [[ $? -eq 0 ]]; then if [[ $({ git diff --numstat && git diff --cached --numstat; } | wc -l) -gt 0 ]]; then echo -e "\[\033[33m\]"; else echo -e "\[\033[94m\]"; fi; fi``__git_ps1` \[\033[00m\]'
brick🔗Programming/Website (master) cd ..
brick🔗Projects/Programming
brick🔗Projects/Programming
brick🔗Projects/Programming
brick🔗Projects/Programming rm foo
rm: cannot remove 'foo': No such file or directory
brick🔗Projects/Programming touch foo
brick🔗Projects/Programming rm foo
brick🔗Projects/Programming rm foo
rm: cannot remove 'foo': No such file or directory
brick🔗Projects/Programming
brick🔗Projects/Programming
brick🔗Projects/Programming touch foo
brick🔗Projects/Programming rm foo
brick🔗Projects/Programming ls
'0.005$ problem'                           'Javascript interview with a Google engineer'   Steganography                                   'copy files.txt'                    'music generator'
'2d project timeline'                      'Markdown Inline Formatter'                    'Stock Market'                                   'copy proof'                        'new emilien.ml website'
'6th Sense'                                'Markup Language'                              'Stock Trading Strategy'                         'css grid test'                     'new language test'
'AI Image Compression'                     'Messenger Always Active'                      'Technical interview with a Microsoft engineer'  'custom launchpad'                  'noise canceler (not working)'
'Among Us Color Modifier'                  'Messenger Phishing'                           'Virus Maker Website'                            'deep writing'                      'old html stuff'
'Auto Clan Castle COC'                     'Minecraft Chat Large Font'                    'Virus Maker random versions'                    'eb ai'                             'pi finder'
 AutoCloudBackup                           'Modular Drawers Generator'                     WebInfo                                         'emma comment flood (not working)'  'poème deep freeze stealer'
 AutoSDCard                                'Monty Hall Problem'                           'WebInfo V4'                                     'emma website redesign'             'prime finder'
'Bee Movie Spam'                            MultiToastJS                                   Website                                         'emoji transfer'                    'programming challenge'
'Betaflight Blackbox Viewer'               'Music Offset Generator'                       'Website DOS'                                    'epilepsy lol'                       python-https-server.py
'CSBE Account Finder'                      'Neumorphic Design'                             Website-Old                                     'fibonacci finder'                  'random games like limbo'
'Caps Hotkeys V2'                          'Node Emilien.ml'                              'Word Generation'                                'fundemental particle simulation'   'réglages server'
'Card Bar Code'                            'NodeJS Simple Server'                         'Workflow Command'                               'haaacked website'                  'simple keyloggerV2'
'Cellular Automata'                        'Physics Range Analysis'                       'Youtube View Generator'                          hanoi.html                         'storage unit website'
'Emilien.ml V3'                            'PyBot Beta 1.0'                               'agar.io bot'                                    'hose finite element analysis'      'strike compiler (not working)'
'Encod-R 2.0'                              'Python Spam Bot'                              'artificial intelligence'                        'ip logger'                         'test multiplayer game'
'FizzBuzz, Ohe Simple Interview Question'   RCD                                           'assembly tests'                                 'javascript audiocontext test'       toUpper.py
'Font Generator'                           'RPi Server'                                    autorun.txt                                     'javascript scope test'             'vbs viruses'
'Google Calendar Automation'               'Random C++ Programs'                          'binary splitter'                                'kahoothack (not working)'          'vpn server test (not working)'
'HTML Virus'                               'Russian Roulette'                              blockUserInput.ps1                              'learning rust'                     'web worker test'
'Hello World Game'                          Scylla                                         comment                                         'mix parser'
'JScript Wifi Remover'                     'Spread-R JS'                                  'compiler tests'                                 'mix website idea'
brick🔗Projects/Programming cd Website
brick🔗Programming/Website (master) ls
ICON.png  LICENSE  README.md  next.config.js  website
brick🔗Programming/Website (master) rm ICON.png
brick🔗Programming/Website (master) rm ICON.png
rm: cannot remove 'ICON.png': No such file or directory
brick🔗Programming/Website (master) git reset
Unstaged changes after reset:
D       ICON.png
brick🔗Programming/Website (master) ls
LICENSE  README.md  next.config.js  website
brick🔗Programming/Website (master) git reset --hard
HEAD is now at 8f4b5cc fixed cards unloading when clicking browser's 'back' button
brick🔗Programming/Website (master) git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean
brick🔗Programming/Website (master) cd ..
brick🔗Projects/Programming cat blockUserInput.ps1
$UI = Add-Type -MemberDefinition @"
    [DllImport("user32.dll")]
    public static extern bool BlockInput(bool f);
"@ -Name UI -Namespace UI -PassThru

$UI::BlockInput($true)
Start-Sleep 4
$UI::BlockInput($false)brick🔗Projects/Programming cd Websi
-bash: cd: Websi: No such file or directory
brick🔗Projects/Programming cd Website
brick🔗Programming/Website (master) rm ICON.png
brick🔗Programming/Website (master) rm ICON.png
rm: cannot remove 'ICON.png': No such file or directory
brick🔗Programming/Website (master) rm ICON.png
rm: cannot remove 'ICON.png': No such file or directory
brick🔗Programming/Website (master) git reset --hard
HEAD is now at 8f4b5cc fixed cards unloading when clicking browser's 'back' button
brick🔗Programming/Website (master)
brick🔗Programming/Website (master)

brick🔗Programming/Website (master)
brick🔗Programming/Website (master)
brick🔗Programming/Website (master)
brick🔗Programming/Website (master)
brick🔗Programming/Website (master)
brick🔗Programming/Website (master)

brick🔗Programming/Website (master)

brick🔗Programming/Website (master)
brick🔗Programming/Website (master)
brick🔗Programming/Website (master)
brick🔗Programming/Website (master)
brick🔗Programming/Website (master)